#!/bin/bash

if [ ! -f ~/.prompt_colors ]; then
	# this is a new box, so randomize colours
	function get_rand() {
		RANGE=256
		number=$RANDOM
		let "number %= $RANGE"
		printf "'%s'" "\e[38;5;${number}m"
		#printf "%s" number
	}
	printf "%s\n\n" "#!/bin/bash" >> ~/.prompt_colors
	printf "PROMPT_COLOUR_USER=%s\n" "$(get_rand)" >> ~/.prompt_colors
	printf "PROMPT_COLOUR_CHAR=%s\n" "$(get_rand)" >> ~/.prompt_colors
	printf "PROMPT_COLOUR_HOST=%s\n" "$(get_rand)" >> ~/.prompt_colors
	printf "PROMPT_COLOUR_DIR=%s\n" "$(get_rand)" >> ~/.prompt_colors
	printf "PROMPT_COLOUR_BRANCH=%s\n" $(get_rand) >> ~/.prompt_colors
	printf "%s" "PROMPT_COLOUR_RESET='\e[0m'" >> ~/.prompt_colors
fi
source ~/.prompt_colors
function p() {
	printf "%b" $1
}
source ~/.dotfiles/home/git-prompt.sh
function git_stuff() {
	if git status --porcelain &>/dev/null; then
		echo " $(p $PROMPT_COLOUR_CHAR)⍦$(p $PROMPT_COLOUR_BRANCH)$(__git_ps1)"
	fi
}
PS1="\[$(p $PROMPT_COLOUR_USER)\]\u \[$(p $PROMPT_COLOUR_CHAR)\]@ \[$(p $PROMPT_COLOUR_HOST)\]\h \[$(p $PROMPT_COLOUR_CHAR)\]∈ \[$(p $PROMPT_COLOUR_DIR)\]\w"
PS1="${PS1}"'$(git_stuff)'
PS1="${PS1}\[$(p $PROMPT_COLOUR_CHAR)\]\n\$ \[$(p $PROMPT_COLOUR_RESET)\]"
PS2="\n\[$(p $PROMPT_COLOUR_CHAR)\]→ \[$(p $PROMPT_COLOUR_RESET)\]"
export PS1
export PS2
